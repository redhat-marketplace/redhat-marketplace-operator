
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: meterdefinitionstores.marketplace.redhat.com
spec:
  group: marketplace.redhat.com
  names:
    kind: MeterdefinitionStore
    listKind: MeterdefinitionStoreList
    plural: meterdefinitionstores
    singular: meterdefinitionstore
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeterDefinitionStore defines the meter workloads used to enable
        pay for use billing.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: x defines ...
          properties:
            entry:
              additionalProperties:
                properties:
                  meterdefinitions:
                    items:
                      description: MeterDefinitionList contains a list of MeterDefinition
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        items:
                          items:
                            description: MeterDefinition defines the meter workloads
                              used to enable pay for use billing.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                type: object
                              spec:
                                description: MeterDefinitionSpec defines the desired
                                  metering spec
                                properties:
                                  group:
                                    description: Group defines the operator group
                                      of the meter
                                    type: string
                                  installedBy:
                                    description: InstalledBy is a reference to the
                                      CSV that install the meter definition. This
                                      is used to determine an operator group.
                                    properties:
                                      groupVersionKind:
                                        description: GroupVersionKind of the resource
                                        properties:
                                          apiVersion:
                                            description: APIVersion of the CRD
                                            type: string
                                          kind:
                                            description: Kind of the CRD
                                            type: string
                                        required:
                                        - apiVersion
                                        - kind
                                        type: object
                                      name:
                                        description: Name of the resource Required
                                        type: string
                                      namespace:
                                        description: Namespace of the resource Required
                                        type: string
                                      uid:
                                        description: Namespace of the resource
                                        type: string
                                    required:
                                    - name
                                    - namespace
                                    type: object
                                  kind:
                                    description: Kind defines the primary CRD kind
                                      of the meter
                                    type: string
                                  meters:
                                    description: Meters are the definitions related
                                      to the metrics that you would like to monitor.
                                    items:
                                      properties:
                                        aggregation:
                                          description: Aggregation to use with the
                                            query
                                          enum:
                                          - sum
                                          - min
                                          - max
                                          - avg
                                          type: string
                                        dateLabelOverride:
                                          description: DateLabelOverride provides
                                            a means of overriding the date returned
                                            for the metric using a label. This is
                                            to handle cases where the metric is a
                                            constant that is calculated.
                                          type: string
                                        description:
                                          description: Description is the overview
                                            of what the metric is providing for humans
                                            to read.
                                          type: string
                                        groupBy:
                                          description: Group is the set of label fields
                                            returned by query to aggregate on.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        label:
                                          description: Label is the usage metrics
                                            key field on the report. Defaults to the
                                            metricId field if not provided
                                          type: string
                                        metricId:
                                          description: Metric is the id of the meter
                                          type: string
                                        name:
                                          description: Name of the metric for humans
                                            to read.
                                          type: string
                                        period:
                                          description: Period is the amount of time
                                            to segment the data into. Default is 1h.
                                          type: string
                                        query:
                                          description: Query to use for prometheus
                                            to find the metrics
                                          type: string
                                        unit:
                                          description: Unit is the unit of the metrics.
                                            Defaults to the metricId field if not
                                            provided
                                          type: string
                                        valueLabelOverride:
                                          description: ValueLabelOverride provides
                                            a means of overriding the value returned
                                            for the metric using a label. This is
                                            to handle cases where the metric is a
                                            constant that is calculated.
                                          type: string
                                        without:
                                          description: Labels to filter out automatically.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        workloadType:
                                          description: WorkloadType identifies the
                                            type of workload to look for. This can
                                            be pod or service right now.
                                          enum:
                                          - Pod
                                          - Service
                                          - PersistentVolumeClaim
                                          type: string
                                      required:
                                      - aggregation
                                      - metricId
                                      - query
                                      - workloadType
                                      type: object
                                    type: array
                                  resourceFilters:
                                    description: ResourceFilters provide filters that
                                      will be used to find the workload objects. This
                                      is to find the exact resources the query is
                                      interested in. At least one must be provided.
                                    items:
                                      properties:
                                        annotation:
                                          description: Annotation uses the resource
                                            annotations to find resources to monitor.
                                          properties:
                                            annotationSelector:
                                              description: AnnotationSelector are
                                                used to filter to the correct workload.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                          type: object
                                        label:
                                          description: Label uses the resource annotations
                                            to find resources to monitor.
                                          properties:
                                            labelSelector:
                                              description: LabelSelector are used
                                                to filter to the correct workload.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                          type: object
                                        namespace:
                                          description: Namespace is the filter to
                                            control which namespaces to look for your
                                            resources. Default is always Operator
                                            Group (supported by OLM)
                                          properties:
                                            labelSelector:
                                              description: LabelSelector are used
                                                to filter to the correct workload.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            useOperatorGroup:
                                              description: UseOperatorGroup use your
                                                operator group for namespace filtering
                                              type: boolean
                                          required:
                                          - useOperatorGroup
                                          type: object
                                        ownerCRD:
                                          description: OwnerCRD uses the owning CRD
                                            to filter resources.
                                          properties:
                                            apiVersion:
                                              description: APIVersion of the CRD
                                              type: string
                                            kind:
                                              description: Kind of the CRD
                                              type: string
                                          required:
                                          - apiVersion
                                          - kind
                                          type: object
                                        workloadType:
                                          description: WorkloadType identifies the
                                            type of workload to look for. This can
                                            be pod or service right now.
                                          enum:
                                          - Pod
                                          - Service
                                          - PersistentVolumeClaim
                                          type: string
                                      required:
                                      - workloadType
                                      type: object
                                    minItems: 1
                                    type: array
                                required:
                                - group
                                - kind
                                - meters
                                - resourceFilters
                                type: object
                              status:
                                description: MeterDefinitionStatus defines the observed
                                  state of MeterDefinition
                                properties:
                                  conditions:
                                    description: Conditions represent the latest available
                                      observations of an object's state
                                    items:
                                      description: "Condition represents an observation
                                        of an object's state. Conditions are an extension
                                        mechanism intended to be used when the details
                                        of an observation are not a priori known or
                                        would not apply to all instances of a given
                                        Kind. \n Conditions should be added to explicitly
                                        convey properties that users and components
                                        care about rather than requiring those properties
                                        to be inferred from other observations. Once
                                        defined, the meaning of a Condition can not
                                        be changed arbitrarily - it becomes part of
                                        the API, and has the same backwards- and forwards-compatibility
                                        concerns of any other part of the API."
                                      properties:
                                        lastTransitionTime:
                                          format: date-time
                                          type: string
                                        message:
                                          type: string
                                        reason:
                                          description: ConditionReason is intended
                                            to be a one-word, CamelCase representation
                                            of the category of cause of the current
                                            status. It is intended to be used in concise
                                            output, such as one-line kubectl get output,
                                            and in summarizing occurrences of causes.
                                          type: string
                                        status:
                                          type: string
                                        type:
                                          description: "ConditionType is the type
                                            of the condition and is typically a CamelCased
                                            word or short phrase. \n Condition types
                                            should indicate state in the \"abnormal-true\"
                                            polarity. For example, if the condition
                                            indicates when a policy is invalid, the
                                            \"is valid\" case is probably the norm,
                                            so the condition should be called \"Invalid\"."
                                          type: string
                                      required:
                                      - status
                                      - type
                                      type: object
                                    type: array
                                  results:
                                    description: Results is a list of Results that
                                      get returned from a query to prometheus
                                    items:
                                      description: Result is a result of a query defined
                                        on the meterdefinition. This will generate
                                        data for the previous hour on whichever workload
                                        you specify. This will allow you to check
                                        whether a query is working as intended.
                                      properties:
                                        metricName:
                                          description: MetricName is the identifier
                                            that you will use to identify your query
                                          type: string
                                        query:
                                          description: Query is the compiled query
                                            that is given to Prometheus
                                          type: string
                                        values:
                                          description: Values are the results of the
                                            query
                                          items:
                                            description: ResultValues will hold the
                                              results of the prometheus query
                                            properties:
                                              timestamp:
                                                format: int64
                                                type: integer
                                              value:
                                                type: string
                                            required:
                                            - timestamp
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  workloadResource:
                                    description: WorkloadResources is the list of
                                      resources discovered by this meter definition
                                    items:
                                      description: WorkloadResource represents the
                                        resources associated to a workload
                                      properties:
                                        groupVersionKind:
                                          description: GroupVersionKind of the resource
                                          properties:
                                            apiVersion:
                                              description: APIVersion of the CRD
                                              type: string
                                            kind:
                                              description: Kind of the CRD
                                              type: string
                                          required:
                                          - apiVersion
                                          - kind
                                          type: object
                                        name:
                                          description: Name of the resource Required
                                          type: string
                                        namespace:
                                          description: Namespace of the resource Required
                                          type: string
                                        referencedWorkloadName:
                                          description: ReferencedWorkloadName is the
                                            name of the workload
                                          type: string
                                        uid:
                                          description: Namespace of the resource
                                          type: string
                                      required:
                                      - name
                                      - namespace
                                      type: object
                                    type: array
                                type: object
                            type: object
                          type: array
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: ListMeta describes metadata that synthetic
                            resources must have, including lists and various status
                            objects. A resource may have only one of {ObjectMeta,
                            ListMeta}.
                          properties:
                            continue:
                              description: continue may be set if the user set a limit
                                on the number of items returned, and indicates that
                                the server has more data available. The value is opaque
                                and may be used to issue another request to the endpoint
                                that served this list to retrieve the next set of
                                available objects. Continuing a consistent list may
                                not be possible if the server configuration has changed
                                or more than a few minutes have passed. The resourceVersion
                                field returned when using this continue value will
                                be identical to the value in the first response, unless
                                you have received this token from an error message.
                              type: string
                            remainingItemCount:
                              description: remainingItemCount is the number of subsequent
                                items in the list which are not included in this list
                                response. If the list request contained label or field
                                selectors, then the number of remaining items is unknown
                                and the field will be left unset and omitted during
                                serialization. If the list is complete (either because
                                it is not chunking or because this is the last chunk),
                                then there are no more remaining items and this field
                                will be left unset and omitted during serialization.
                                Servers older than v1.15 do not set this field. The
                                intended use of the remainingItemCount is *estimating*
                                the size of a collection. Clients should not rely
                                on the remainingItemCount to be set or to be exact.
                              format: int64
                              type: integer
                            resourceVersion:
                              description: 'String that identifies the server''s internal
                                version of this object that can be used by clients
                                to determine when objects have changed. Value must
                                be treated as opaque by clients and passed unmodified
                                back to the server. Populated by the system. Read-only.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            selfLink:
                              description: "selfLink is a URL representing this object.
                                Populated by the system. Read-only. \n DEPRECATED
                                Kubernetes will stop propagating this field in 1.20
                                release and the field is planned to be removed in
                                1.21 release."
                              type: string
                          type: object
                      required:
                      - items
                      type: object
                    type: array
                  version:
                    type: string
                required:
                - meterdefinitions
                - version
                type: object
              description: Entry defines an entry to the meterdefinitionstore
              type: object
            group:
              description: Group defines the operator group of the meter
              type: string
          required:
          - entry
          - group
          type: object
        status:
          description: MeterdefinitionStoreStatus defines the observed state of MeterdefinitionStore
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
