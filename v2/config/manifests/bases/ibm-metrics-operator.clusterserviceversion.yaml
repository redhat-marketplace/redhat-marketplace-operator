apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Full Lifecycle
    categories: Developer Tools
    certified: "true"
    description: The IBM Metrics Operator provides workload metering and reporting
      for IBM and Red Hat Marketplace customers.
    olm.skipRange: '>=1.0.0 <2.2.0'
    operatorframework.io/suggested-namespace: ibm-software-central
    operators.operatorframework.io/builder: operator-sdk-v1.2.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/redhat-marketplace/redhat-marketplace-operator
    support: IBM Corporation
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
    operatorframework.io/os.linux: supported
  name: ibm-metrics-operator.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: MarketplaceConfig is configuration manager for our Red Hat Marketplace
        controllers By installing this product you accept the license terms https://ibm.biz/BdfaAY.
      displayName: Marketplace Config
      kind: MarketplaceConfig
      name: marketplaceconfigs.marketplace.redhat.com
      version: v1alpha1
    - description: MeterBase is the resource that sets up Metering for Red Hat Marketplace.
        This is an internal resource not meant to be modified directly.
      displayName: Meter Base
      kind: MeterBase
      name: meterbases.marketplace.redhat.com
      version: v1alpha1
    - description: MeterDefinition defines the meter workloads used to enable pay
        for use billing.
      displayName: Meter Definition
      kind: MeterDefinition
      name: meterdefinitions.marketplace.redhat.com
      version: v1beta1
    - description: MeterDefinition defines the meter workloads used to enable pay
        for use billing.
      displayName: Meter Definition
      kind: MeterDefinition
      name: meterdefinitions.marketplace.redhat.com
      version: v1alpha1
  description: "The IBM Metrics Operator provides workload metering and reporting
    for IBM and Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions
    for onboarding is provided here. For more detailed onboarding instructions or
    information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\n\n###
    **Upgrade Notice**\n\nThe Red Hat Marketplace Operator metering and deployment
    functionalities have been separated into two operators.\n  - The metering functionality
    is included in this IBM Metrics Operator\n    - Admin level functionality and
    permissions are removed from the IBM Metrics Operator\n    - ClusterServiceVersion/ibm-metrics-operator\n
    \ - The deployment functionality remains as part of the Red Hat Marketplace Deployment
    Operator by IBM\n    - The Red Hat Marketplace Deployment Operator prerequisites
    the IBM Metrics Operator\n    - Some admin level RBAC permissions are required
    for deployment functionality\n    - ClusterServiceVersion/redhat-marketplace-operator\n\nFull
    registration and visibility of usage metrics on [https://marketplace.redhat.com](https://marketplace.redhat.com)
    requires both IBM Metrics Operator and Red Hat Marketplace Deployment Operator.\n\n###
    Upgrade Policy\n\nThe operator releases adhere to semantic versioning and provides
    a seamless upgrade path for minor and patch releases within the current stable
    channel.\n\n### Prerequisites\n1. Installations are required to [enable monitoring
    for user-defined projects](https://docs.openshift.com/container-platform/latest/monitoring/enabling-monitoring-for-user-defined-projects.html)
    as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n\n
    \  ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n
    \   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n
    \   apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n
    \       namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload:
    true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n\n
    \   ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n
    \   ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity
    of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n
    \     name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n\n
    \   data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n
    \         volumeClaimTemplate:\n            spec:\n              resources:\n
    \               requests:\n                  storage: 40Gi\n    ```\n\n### Resources
    Required\n\nMinimum system resources required:\n\n| Operator                |
    Memory (MB) | CPU (cores) | Disk (GB) | Nodes |\n| ----------------------- | -----------
    | ----------- | --------- | ----- |\n| **Metrics**   |        750  |     0.25
    \   | 3x1       |    3  |\n| **Deployment** |        250  |     0.25    | -         |
    \   1  |\n\n| Prometheus Provider  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes
    |\n| --------- | ----------- | ----------- | --------- | ----- |\n| **[Openshift
    User Workload Monitoring](https://docs.openshift.com/container-platform/latest/monitoring/enabling-monitoring-for-user-defined-projects.html)**
    |          1  |     0.1       | 2x40        |   2    |\n\nMultiple nodes are required
    to provide pod scheduling for high availability for Red Hat Marketplace Data Service
    and Prometheus.\n\nThe IBM Metrics Operator automatically creates 3 x 1Gi PersistentVolumeClaims
    to store reports as part of the data service, with _ReadWriteOnce_ access mode.
    Te PersistentVolumeClaims are automatically created by the ibm-metrics-operator
    after creating a `redhat-marketplace-pull-secret` and accepting the license in
    `marketplaceconfig`.\n\n| NAME                                | CAPACITY | ACCESS
    MODES |\n| ----------------------------------- | -------- | ------------ |\n|
    rhm-data-service-rhm-data-service-0 | 1Gi | RWO |\n| rhm-data-service-rhm-data-service-1
    | 1Gi | RWO |\n| rhm-data-service-rhm-data-service-2 | 1Gi | RWO |\n\n### Supported
    Storage Providers\n\n- OpenShift Container Storage / OpenShift Data Foundation
    version 4.x, from version 4.2 or higher\n- IBM Cloud Block storage and IBM Cloud
    File storage\n- IBM Storage Suite for IBM Cloud Paks:\n  - File storage from IBM
    Spectrum Fusion/Scale \n  - Block storage from IBM Spectrum Virtualize, FlashSystem
    or DS8K\n- Portworx Storage, version 2.5.5 or above\n- Amazon Elastic File Storage\n\n###
    Access Modes required\n\n - ReadWriteOnce (RWO)\n\n### Provisioning Options supported\n\nChoose
    one of the following options to provision storage for the ibm-metrics-operator
    data-service\n\n#### Dynamic provisioning using a default StorageClass\n   - A
    StorageClass is defined with a `metadata.annotations: storageclass.kubernetes.io/is-default-class:
    \"true\"`\n   - PersistentVolumes will be provisioned automatically for the generated
    PersistentVolumeClaims\n--- \n#### Manually create each PersistentVolumeClaim
    with a specific StorageClass\n   - Must be performed before creating a `redhat-marketplace-pull-secret`
    or accepting the license in `marketplaceconfig`. Otherwise, the automatically
    generated PersistentVolumeClaims are immutable.\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n
    \ labels:\n    app: rhm-data-service\n  name: rhm-data-service-rhm-data-service-0\n
    \ namespace: ibm-software-central\nspec:\n  storageClassName: rook-cephfs\n  accessModes:\n
    \ - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```\n---\n####
    Manually provision each PersistentVolume for the generated PersistentVolumeClaims
    with a specific StorageClass\n  - May be performed before or after creating a
    `redhat-marketplace-pull-secret` or accepting the license in `marketplaceconfig`.
    \ \n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: rhm-data-service-rhm-data-service-0\nspec:\n
    \ csi:\n    driver: rook-ceph.cephfs.csi.ceph.com\n    volumeHandle: rhm-data-service-rhm-data-service-0\n
    \ capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy:
    Delete\n  storageClassName: rook-cephfs\n  volumeMode: Filesystem\n  claimRef:\n
    \   kind: PersistentVolumeClaim\n    namespace: ibm-software-central\n    name:
    rhm-data-service-rhm-data-service-0\n```\n\n### Installation\n1. Create or get
    your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2.
    Install the IBM Metrics Operator\n3. Create a Kubernetes secret in the installed
    namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET`
    with the value of the Red hat Marketplace Pull Secret.\n    ```sh\n    # Replace
    ${PULL_SECRET} with your secret from Red Hat Marketplace\n    oc create secret
    generic redhat-marketplace-pull-secret -n  redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n
    \   ```\n4. Use of the Red Hat Marketplace platform is governed by the:\n\n    [IBM
    Cloud Services Agreement](https://www.ibm.com/support/customer/csol/terms/?id=Z126-6304_WS&_ga=2.116312197.2046730452.1684328846-812467790.1684328846)
    (or other base agreement between you and IBM such as a [Passport Advantage Agreement](https://www.ibm.com/software/passportadvantage/pa_agreements.html?_ga=2.116312197.2046730452.1684328846-812467790.1684328846))
    and the [Service Description for the Red Hat Marketplace](https://www.ibm.com/support/customer/csol/terms/?id=i126-8719&_ga=2.83289621.2046730452.1684328846-812467790.1684328846).\n
    \   \n5. Update MarketplaceConfig to accept the license.\n    ```\n    oc patch
    marketplaceconfig marketplaceconfig -n redhat-marketplace --type='merge' -p '{\"spec\":
    {\"license\": {\"accept\": true}}}'\n    ```\n6. Install the Red Hat Marketplace
    pull secret as a global pull secret on the cluster.\n\n    These steps require
    `oc`, `jq`, and `base64` to be available on your machine.\n\n    ```sh\n    #
    Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n
    \   # Store it in a file called entitledregistryconfigjson.\n    oc create secret
    docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com
    --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=client
    --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n
    \   # Get the current global secrets on the cluster and store it as a file named
    dockerconfigjson\n    oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\"
    | base64 --decode > dockerconfigjson\n    # Merge the two dockerconfigs together
    into a file called dockerconfigjson-merged.\n    jq -s '.[0] * .[1]' dockerconfigjson
    entitledregistryconfigjson > dockerconfigjson-merged\n    # Set the cluster's
    dockerconfig file to the new merged version.\n    oc set data secret/pull-secret
    -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n    ```\n\n###
    Why is a global pull secret required?\nIn order to successfully install the Red
    Hat Marketplace products, you will need to make the pull secret available across
    the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret
    as a [global pull secret](https://docs.openshift.com/container-platform/latest/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).
    For alternative approaches, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/latest/openshift_images/managing_images/using-image-pull-secrets.html).\n\n\n###
    SecurityContextConstraints requirements\n\nThe Operators and their components
    support running under the OpenShift Container Platform default restricted and
    restricted-v2 security context constraints.\n\n### Installation Namespace and
    ClusterRoleBinding requirements\n\nThe IBM Metrics Operator components require
    specific ClusterRoleBindings.\n- The metric-state component requires a ClusterRoleBinding
    for the the `view` ClusterRole. \n- The reporter component requires a ClusterRoleBinding
    for the the `cluster-monitoring-view` ClusterRole. \n\nDue to limitations of Operator
    Lifecycle Manager (OLM), this ClusterRoleBinding can not be provided automatically
    for arbitrary installation target namespaces.\n\nA ClusterRoleBinding is included
    for installation to the default namespace of `redhat-marketplace`, and namespaces
    `openshift-redhat-marketplace`, `ibm-common-services`.\n\nTo update the ClusterRoleBindings
    for installation to an alternate namespace\n```\noc patch clusterrolebinding ibm-metrics-operator-metric-state-view-binding
    --type='json' -p='[{\"op\": \"add\", \"path\": \"/subjects/1\", \"value\": {\"kind\":
    \"ServiceAccount\", \"name\": \"ibm-metrics-operator-metric-state\",\"namespace\":
    \"NAMESPACE\" }}]'\n\noc patch clusterrolebinding ibm-metrics-operator-reporter-cluster-monitoring-binding
    --type='json' -p='[{\"op\": \"add\", \"path\": \"/subjects/1\", \"value\": {\"kind\":
    \"ServiceAccount\", \"name\": \"ibm-metrics-operator-reporter\",\"namespace\":
    \"NAMESPACE\" }}]'\n```\n\n### Metric State scoping requirements\nThe metric-state
    Deployment obtains `get/list/watch` access to metered resources via the `view`
    ClusterRole. For operators deployed using Operator Lifecycle Manager (OLM), permissions
    are added to `clusterrole/view` dynamically via a generated and annotated `-view`
    ClusterRole. If you wish to meter an operator, and its Custom Resource Definitions
    (CRDs) are not deployed through OLM, one of two options are required\n1. Add the
    following label to a clusterrole that has get/list/watch access to your CRD: `rbac.authorization.k8s.io/aggregate-to-view:
    \"true\"`, thereby dynamically adding it to `clusterrole/view`\n2. Create a ClusterRole
    that has get/list/watch access to your CRD, and create a ClusterRoleBinding for
    the metric-state ServiceAccount\n\nAttempting to meter a resource with a MeterDefinition
    without the required permissions will log an `AccessDeniedError` in metric-state.\n\n###
    Disaster Recovery\n\nTo plan for disaster recovery, note the PhysicalVolumeClaims
    `rhm-data-service-rhm-data-service-N`. \n- In connected environments, MeterReport
    data upload attempts occur hourly, and are then removed from data-service. There
    is a low risk of losing much unreported data.\n- In an airgap environment, MeterReport
    data must be pulled from data-service and uploaded manually using `datactl`. To
    prevent data loss in a disaster scenario, the data-service volumes should be considered
    in a recovery plan.\n\n### Subscription Config\n\nIt is possible to [configure](https://github.com/operator-framework/operator-lifecycle-manager/blob/master/doc/design/subscription-config.md)
    how OLM deploys an Operator via the `config` field in the [Subscription](https://github.com/operator-framework/olm-book/blob/master/docs/subscriptions.md)
    object.\n\nThe IBM Metrics Operator will also read the `config` and append it
    to the operands. The primary use case is to control scheduling using [Tolerations](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
    and [NodeSelectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).\n\nA
    limitation is that the `config` elements are only appended to the operands. The
    elements in the operands are not removed if the `config` is removed from the `Subscripion`.
    The operand must be modified manually, or deleted and recreated by the controller.\n\n###
    Cluster permission requirements\n\n|API group             |Resources              |Verbs
    \                                    |\n|----------------------|-----------------------|------------------------------------------|\n|apps
    \                 |statefulsets           |get;list;watch                            |\n|authentication.k8s.io
    |tokenreviews           |create                                    |\n|authorization.k8s.io
    \ |subjectaccessreviews   |create                                    |\n|config.openshift.io
    \  |clusterversions        |get;list;watch                            |\n|marketplace.redhat.com|meterdefinitions
    \      |get;list;watch;create;update;patch;delete |\n|operators.coreos.com  |clusterserviceversions
    |get;list;watch                            |\n|operators.coreos.com  |subscriptions
    \         |get;list;watch                            |\n|operators.coreos.com
    \ |operatorgroups         |get;list                                  |\n|storage.k8s.io
    \       |storageclasses         |get;list;watch                            |\n|
    \                     |namespaces             |get;list;watch                            |\n|
    \                     |configmaps             |get;list;watch                            |\n|
    \                     |services               |get;list;watch                            |\n|
    \                     |**clusterrole/view**   |                                          |\n\n\n###
    Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n\n###
    Getting help\nIf you encounter any issues while using Red Hat Marketplace operator,
    you can create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator)
    for bugs, enhancements, or other requests. You can also visit our main page and\nreview
    our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n\n###
    Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n\n###
    License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n"
  displayName: IBM Metrics Operator
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI1MS44IiBoZWlnaHQ9IjE5LjMzIiB2aWV3Qm94PSIwIDAgNTEuOCAxOS4zMyI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiM0MjZhYjM7fTwvc3R5bGU+PC9kZWZzPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTM4Ljc2LDkuMiwzOC4zLDcuODZIMzAuNjFWOS4yWm0uOSwyLjU3LS40Ny0xLjM1SDMwLjYxdjEuMzVabTUuNzEsMTUuMzdoNi43MVYyNS44SDQ1LjM3djEuMzRabTAtMi41Nmg2LjcxVjIzLjIzSDQ1LjM3djEuMzVabTAtMi41N2g0VjIwLjY3aC00VjIyWm00LTMuOWgtNHYxLjM0aDRWMTguMTFabS00LTEuMjJoNFYxNS41NUg0MS43M2wtLjM4LDEuMDhMNDEsMTUuNTVIMzMuM3YxLjM0aDRWMTUuNjZsLjQ0LDEuMjNoNy4xOGwuNDMtMS4yM3YxLjIzWm00LTMuOUg0Mi42MmwtLjQ3LDEuMzRINDkuNFYxM1pNMzMuMywxOS40NWg0VjE4LjExaC00djEuMzRabTAsMi41Nmg0VjIwLjY3aC00VjIyWm0tMi42OSwyLjU3aDYuNzFWMjMuMjNIMzAuNjF2MS4zNVptMCwyLjU2aDYuNzFWMjUuOEgzMC42MXYxLjM0Wk00NC40LDcuODYsNDMuOTMsOS4yaDguMTVWNy44NlpNNDMsMTEuNzdoOVYxMC40Mkg0My41MUw0MywxMS43N1pNMzMuMywxNC4zM2g3LjI1TDQwLjA4LDEzSDMzLjN2MS4zNFptNS4zNSw1LjEySDQ0bC40Ny0xLjM0SDM4LjE4bC40NywxLjM0Wm0uOSwyLjU2aDMuNTlsLjQ3LTEuMzRIMzkuMDhMMzkuNTUsMjJabS45LDIuNTdoMS43OWwuNDctMS4zNUg0MGwuNDcsMS4zNVptLjksMi41Ni40Ni0xLjM0aC0uOTNsLjQ3LDEuMzRabS0yNi44NCwwaDkuODhhNS4xMSw1LjExLDAsMCwwLDMuNDYtMS4zNEgxNC41MXYxLjM0Wk0yNSwyMC42N1YyMmg0LjUxYTUuNDEsNS40MSwwLDAsMC0uMTctMS4zNFpNMTcuMTksMjJoNFYyMC42N2gtNFYyMlpNMjUsMTQuMzNoNC4zNEE1LjQxLDUuNDEsMCwwLDAsMjkuNTEsMTNIMjV2MS4zNFptLTcuODEsMGg0VjEzaC00djEuMzRabTcuMi02LjQ3SDE0LjUxVjkuMkgyNy44NWE1LjEzLDUuMTMsMCwwLDAtMy40Ni0xLjM0Wm00LjQ0LDIuNTZIMTQuNTF2MS4zNUgyOS4zN2E1LjMsNS4zLDAsMCwwLS41NC0xLjM1Wk0xNy4xOSwxNS41NXYxLjM0SDI3LjcxYTUuMzYsNS4zNiwwLDAsMCwxLjEyLTEuMzRabTEwLjUyLDIuNTZIMTcuMTl2MS4zNEgyOC44M2E1LjM2LDUuMzYsMCwwLDAtMS4xMi0xLjM0Wm0tMTMuMiw2LjQ3SDI4LjgzYTUuMyw1LjMsMCwwLDAsLjU0LTEuMzVIMTQuNTF2MS4zNVpNMy43Nyw5LjJoOS40VjcuODZIMy43N1Y5LjJabTAsMi41N2g5LjRWMTAuNDJIMy43N3YxLjM1Wk0xMC40OCwxM2gtNHYxLjM0aDRWMTNabS00LDMuOWg0VjE1LjU1aC00djEuMzRabTAsMi41Nmg0VjE4LjExaC00djEuMzRabTAsMi41Nmg0VjIwLjY3aC00VjIyWk0zLjc3LDI0LjU4aDkuNFYyMy4yM0gzLjc3djEuMzVabTAsMS4yMmg5LjR2MS4zNEgzLjc3VjI1LjhabTUwLjgyLjMyYy4wOSwwLC4xMywwLC4xMy0uMTJ2LS4wN2MwLS4wOCwwLS4xMi0uMTMtLjEySDU0LjR2LjMxWm0tLjE5LjU2aC0uMjZWMjUuNjFoLjQ5QS4zMi4zMiwwLDAsMSw1NSwyNmEuMzIuMzIsMCwwLDEtLjIuMzJsLjI1LjQxaC0uMjlsLS4yLS4zN0g1NC40di4zN1ptLjk0LS40OHYtLjEzYS43OS43OSwwLDAsMC0xLjU3LDB2LjEzYS43OS43OSwwLDAsMCwxLjU3LDBabS0xLjgxLS4wNmExLDEsMCwxLDEsMSwxLjA1LDEsMSwwLDAsMS0xLTEuMDVaIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMy43NyAtNy44NikiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - red hat marketplace
  - operators
  - buy
  links:
  - name: Visit the marketplace!
    url: https://marketplace.redhat.com
  - name: About
    url: https://marketplace.redhat.com/en-us/about
  - name: Support
    url: https://marketplace.redhat.com/en-us/support
  maintainers:
  - email: rhmoper@us.ibm.com
    name: RHM Operator Team
  maturity: stable
  provider:
    name: Red Hat Marketplace
  version: 0.0.0
