apiVersion: apps/v1
kind: Deployment
metadata:
  name: rhm-metric-state
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: rhm-metric-state
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: rhm-metric-state
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: rhm-metric-state
        app.kubernetes.io/instance: rhm-metric-state
        app.kubernetes.io/part-of: ibm-metrics-operator
        app.kubernetes.io/managed-by: operator
      annotations:
        productName: 'Red Hat Marketplace Operator'
        productID: '36cdaba810c348c096b85800dd62bcf1'
        productMetric: 'FREE'
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      securityContext: 
        runAsNonRoot: true      
      containers:
        - name: metric-state
          image: metric-state
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
          - name: GOGC
            value: 50
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: metric-state
                resource: limits.memory
          resources:
            requests:
              cpu: 50m
              memory: 80Mi
            limits:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true 
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 8443
              name: https
          volumeMounts:
            - mountPath: /etc/tls/private
              name: rhm-metric-state-tls
              readOnly: false
        - image: redhat-marketplace-authcheck:latest
          name: authcheck
          env:
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: authcheck
                resource: limits.memory
          resources:
            requests:
              cpu: 10m
              memory: 12Mi
            limits:
              cpu: 15m
              memory: 30Mi
          env:
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: authcheck
                resource: limits.memory
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true 
          terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: system-cluster-critical
      serviceAccountName: ibm-metrics-operator-metric-state
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - name: rhm-metric-state-tls
          secret:
            secretName: rhm-metric-state-tls
