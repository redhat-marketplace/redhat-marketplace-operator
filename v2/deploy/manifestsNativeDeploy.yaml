apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: openshift-redhat-marketplace
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: marketplaceconfigs.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Installing")].status
    name: INSTALLING
    type: string
  - JSONPath: .status.conditions[?(@.type == "Installing")].reason
    name: STEP
    type: string
  - JSONPath: .status.conditions[?(@.type == "Registered")].status
    name: REGISTERED
    type: string
  - JSONPath: .status.conditions[?(@.type == "Registered")].message
    name: REGISTERED_MSG
    type: string
  group: marketplace.redhat.com
  names:
    kind: MarketplaceConfig
    listKind: MarketplaceConfigList
    plural: marketplaceconfigs
    singular: marketplaceconfig
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MarketplaceConfig is configuration manager for our Red Hat Marketplace
        controllers
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MarketplaceConfigSpec defines the desired state of MarketplaceConfig
          properties:
            clusterName:
              description: ClusterName is the name that will be assigned to your cluster
                in the Red Hat Marketplace UI. If you have set the name in the UI
                first, this name will be ignored.
              type: string
            clusterUUID:
              description: ClusterUUID is the Red Hat Marketplace cluster identifier
              type: string
            deploySecretName:
              description: DeploySecretName is the secret name that contains the deployment
                information
              type: string
            enableMetering:
              description: EnableMetering enables the Marketplace Metering components
              type: boolean
            features:
              description: The features that can be enabled or disabled
              properties:
                deployment:
                  description: Deployment represents the enablement of the razee deployment,
                    defaults to true when not set
                  type: boolean
                registration:
                  description: Registration represents the enablement of the registration
                    watchkeeper deployment, defaults to true when not set
                  type: boolean
              type: object
            installIBMCatalogSource:
              description: InstallIBMCatalogSource is the flag that indicates if the
                IBM Catalog Source is installed
              type: boolean
            namespaceLabelSelector:
              description: NamespaceLabelSelector is a LabelSelector that overrides
                the default LabelSelector used to build the OperatorGroup Namespace
                list
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            rhmAccountID:
              description: RhmAccountID is the Red Hat Marketplace Account identifier
              type: string
          required:
          - clusterUUID
          - rhmAccountID
          type: object
        status:
          description: MarketplaceConfigStatus defines the observed state of MarketplaceConfig
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's stateonfig
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            meterBaseSubConditions:
              description: MeterBaseSubConditions represent the latest available observations
                of the meterbase object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            razeeSubConditions:
              description: RazeeSubConditions represent the latest available observations
                of the razee object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: meterbases.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Installing")].status
    name: INSTALLING
    type: string
  - JSONPath: .status.conditions[?(@.type == "Installing")].reason
    name: STEP
    type: string
  - JSONPath: .status.availableReplicas
    name: AvailableReplicas
    type: integer
  - JSONPath: .status.replicas
    name: Replicas
    type: integer
  - JSONPath: .status.updatedReplicas
    name: UpdatedReplicas
    type: integer
  - JSONPath: .status.unavailableReplicas
    name: UnavailableReplicas
    type: integer
  group: marketplace.redhat.com
  names:
    kind: MeterBase
    listKind: MeterBaseList
    plural: meterbases
    singular: meterbase
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeterBase is the resource that sets up Metering for Red Hat Marketplace.
        This is an internal resource not meant to be modified directly.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MeterBaseSpec defines the desired state of MeterBase
          properties:
            additionalScrapeConfigs:
              description: AdditionalConfigs are set by meter definitions and meterbase
                to what is available on the system.
              properties:
                key:
                  description: The key of the secret to select from.  Must be a valid
                    secret key.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
                optional:
                  description: Specify whether the Secret or its key must be defined
                  type: boolean
              required:
              - key
              type: object
            enabled:
              description: Enabled is the flag that controls if the controller does
                work. Setting enabled to "true" will install metering components.
                False will suspend controller operations for metering components.
              type: boolean
            prometheus:
              description: Prometheus deployment configuration.
              properties:
                replicas:
                  description: Replicas defines the number of desired replicas for
                    the prometheus deployment. Used primarily when running metering
                    on CRC
                  format: int32
                  type: integer
                resources:
                  description: Resource requirements for the deployment. Default is
                    not defined.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                selector:
                  additionalProperties:
                    type: string
                  description: Selector for the pods in the Prometheus deployment
                  type: object
                storage:
                  description: Storage for the deployment.
                  properties:
                    class:
                      description: Storage class for the prometheus stateful set.
                        Default is "" i.e. default.
                      type: string
                    emptyDir:
                      description: EmptyDir is a temporary storage type that gets
                        created on the prometheus pod. When this is defined metering
                        will run on CRC.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Storage size for the prometheus deployment. Default
                        is 40Gi.
                      format: quantity
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      type: string
                      x-kubernetes-int-or-string: true
                  type: object
              required:
              - storage
              type: object
          required:
          - enabled
          type: object
        status:
          description: MeterBaseStatus defines the observed state of MeterBase.
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this Prometheus deployment.
              format: int32
              type: integer
            conditions:
              description: MeterBaseConditions represent the latest available observations
                of an object's stateonfig
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            prometheusStatus:
              description: PrometheusStatus is the most recent observed status of
                the Prometheus cluster. Read-only. Not included when requesting from
                the apiserver, only from the Prometheus
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this Prometheus deployment.
                  format: int32
                  type: integer
                paused:
                  description: Represents whether any actions on the underlying managed
                    objects are being performed. Only delete actions will be performed.
                  type: boolean
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this Prometheus
                    deployment.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment that have the desired version spec.
                  format: int32
                  type: integer
              required:
              - availableReplicas
              - paused
              - replicas
              - unavailableReplicas
              - updatedReplicas
              type: object
            replicas:
              description: Total number of non-terminated pods targeted by this Prometheus
                deployment (their labels match the selector).
              format: int32
              type: integer
            targets:
              description: Targets is a list of prometheus activeTargets
              items:
                description: Target is used by meterbase as a list of prometheus activeTargets
                  with failed health, without DiscoveredLabels
                properties:
                  health:
                    description: HealthStatus models the health status of a scrape
                      target.
                    type: string
                  labels:
                    additionalProperties:
                      description: A LabelValue is an associated value for a LabelName.
                      type: string
                    description: A LabelSet is a collection of LabelName and LabelValue
                      pairs.  The LabelSet may be fully-qualified down to the point
                      where it may resolve to a single Metric in the data store or
                      not.  All operations that occur within the realm of a LabelSet
                      can emit a vector of Metric entities to which the LabelSet may
                      match.
                    type: object
                  lastError:
                    type: string
                  lastScrape:
                    type: string
                  scrapeUrl:
                    type: string
                required:
                - health
                - labels
                - lastError
                - lastScrape
                - scrapeUrl
                type: object
              type: array
            unavailableReplicas:
              description: Total number of unavailable pods targeted by this Prometheus
                deployment.
              format: int32
              type: integer
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this Prometheus
                deployment that have the desired version spec.
              format: int32
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
    service.beta.openshift.io/inject-cabundle: "true"
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: meterdefinitions.marketplace.redhat.com
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: redhat-marketplace-controller-manager-service
        namespace: openshift-redhat-marketplace
        path: /convert
        port: 9443
  group: marketplace.redhat.com
  names:
    kind: MeterDefinition
    listKind: MeterDefinitionList
    plural: meterdefinitions
    singular: meterdefinition
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MeterDefinition defines the meter workloads used to enable pay
          for use billing.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeterDefinitionSpec defines the desired metering spec
            properties:
              installedBy:
                description: InstalledBy is a reference to the CSV that install the
                  meter definition. This is used to determine an operator group.
                properties:
                  groupVersionKind:
                    description: GroupVersionKind of the resource
                    properties:
                      apiVersion:
                        description: APIVersion of the CRD
                        type: string
                      kind:
                        description: Kind of the CRD
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                  name:
                    description: Name of the resource Required
                    type: string
                  namespace:
                    description: Namespace of the resource Required
                    type: string
                  uid:
                    description: Namespace of the resource
                    type: string
                required:
                - name
                - namespace
                type: object
              meterGroup:
                description: Group defines the operator group of the meter
                type: string
              meterKind:
                description: Kind defines the primary CRD kind of the meter
                type: string
              meterVersion:
                description: Version defines the primary CRD version of the meter.
                  This field is no longer used.
                type: string
              podMeterLabels:
                description: PodMeterLabels name of the prometheus metrics you want
                  to track. User workloads instead.
                items:
                  type: string
                type: array
              serviceMeterLabels:
                description: ServiceMeterLabels name of the meterics you want to track.
                  Use workloads instead.
                items:
                  type: string
                type: array
              workloadVertexLabelSelectors:
                description: VertexFilters are used when Namespace is selected. Can
                  be omitted if you select OperatorGroup
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              workloadVertexType:
                description: WorkloadVertexType is the top most object of a workload.
                  It allows you to identify the upper bounds of your workloads.
                enum:
                - Namespace
                - OperatorGroup
                type: string
              workloads:
                description: Workloads identify the workloads to meter.
                items:
                  description: Workload helps identify what to target for metering.
                  properties:
                    annotationSelector:
                      description: AnnotationSelector are used to filter to the correct
                        workload.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    labelSelector:
                      description: LabelSelector are used to filter to the correct
                        workload.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    metricLabels:
                      description: MetricLabels are the labels to collect
                      items:
                        description: MeterLabelQuery helps define a meter label to
                          build and search for
                        properties:
                          aggregation:
                            description: Aggregation to use with the query
                            enum:
                            - sum
                            - min
                            - max
                            - avg
                            type: string
                          label:
                            description: Label is the name of the meter
                            type: string
                          query:
                            description: Query to use for the label
                            type: string
                        required:
                        - label
                        type: object
                      minItems: 1
                      type: array
                    name:
                      description: Name of the workload, must be unique in a meter
                        definition.
                      type: string
                    ownerCRD:
                      description: OwnerCRD is the name of the GVK to look for as
                        the owner of all the meterable assets. If omitted, the labels
                        and annotations are used instead.
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    type:
                      description: WorkloadType identifies the type of workload to
                        look for. This can be pod or service right now.
                      enum:
                      - Pod
                      - Service
                      - PersistentVolumeClaim
                      type: string
                  required:
                  - name
                  - type
                  type: object
                minItems: 1
                type: array
            required:
            - meterGroup
            - meterKind
            type: object
          status:
            description: MeterDefinitionStatus defines the observed state of MeterDefinition
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              results:
                description: Results is a list of Results that get returned from a
                  query to prometheus
                items:
                  description: Result is a result of a query defined on the meterdefinition.
                    This will generate data for the previous hour on whichever workload
                    you specify. This will allow you to check whether a query is working
                    as intended.
                  properties:
                    metricName:
                      description: MetricName is the identifier that you will use
                        to identify your query
                      type: string
                    query:
                      description: Query is the compiled query that is given to Prometheus
                      type: string
                    values:
                      description: Values are the results of the query
                      items:
                        description: ResultValues will hold the results of the prometheus
                          query
                        properties:
                          timestamp:
                            format: int64
                            type: integer
                          value:
                            type: string
                        required:
                        - timestamp
                        - value
                        type: object
                      type: array
                  type: object
                type: array
              workloadResource:
                description: WorkloadResources is the list of resoruces discovered
                  by this meter definition
                items:
                  description: WorkloadResource represents the resources associated
                    to a workload
                  properties:
                    groupVersionKind:
                      description: GroupVersionKind of the resource
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    name:
                      description: Name of the resource Required
                      type: string
                    namespace:
                      description: Namespace of the resource Required
                      type: string
                    referencedWorkloadName:
                      description: ReferencedWorkloadName is the name of the workload
                      type: string
                    uid:
                      description: Namespace of the resource
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: MeterDefinition defines the meter workloads used to enable pay
          for use billing.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeterDefinitionSpec defines the desired metering spec
            properties:
              group:
                description: Group defines the operator group of the meter
                type: string
              installedBy:
                description: InstalledBy is a reference to the CSV that install the
                  meter definition. This is used to determine an operator group.
                properties:
                  groupVersionKind:
                    description: GroupVersionKind of the resource
                    properties:
                      apiVersion:
                        description: APIVersion of the CRD
                        type: string
                      kind:
                        description: Kind of the CRD
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                  name:
                    description: Name of the resource Required
                    type: string
                  namespace:
                    description: Namespace of the resource Required
                    type: string
                  uid:
                    description: Namespace of the resource
                    type: string
                required:
                - name
                - namespace
                type: object
              kind:
                description: Kind defines the primary CRD kind of the meter
                type: string
              meters:
                description: Meters are the definitions related to the metrics that
                  you would like to monitor.
                items:
                  properties:
                    aggregation:
                      description: Aggregation to use with the query
                      enum:
                      - sum
                      - min
                      - max
                      - avg
                      type: string
                    dateLabelOverride:
                      description: DateLabelOverride provides a means of overriding
                        the date returned for the metric using a label. This is to
                        handle cases where the metric is a constant that is calculated.
                      type: string
                    description:
                      description: Description is the overview of what the metric
                        is providing for humans to read.
                      type: string
                    groupBy:
                      description: Group is the set of label fields returned by query
                        to aggregate on.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    label:
                      description: Label is the usage metrics key field on the report.
                        Defaults to the metricId field if not provided
                      type: string
                    metricId:
                      description: Metric is the id of the meter
                      type: string
                    name:
                      description: Name of the metric for humans to read.
                      type: string
                    period:
                      description: Period is the amount of time to segment the data
                        into. Default is 1h.
                      type: string
                    query:
                      description: Query to use for prometheus to find the metrics
                      type: string
                    unit:
                      description: Unit is the unit of the metrics. Defaults to the
                        metricId field if not provided
                      type: string
                    valueLabelOverride:
                      description: ValueLabelOverride provides a means of overriding
                        the value returned for the metric using a label. This is to
                        handle cases where the metric is a constant that is calculated.
                      type: string
                    without:
                      description: Labels to filter out automatically.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    workloadType:
                      description: WorkloadType identifies the type of workload to
                        look for. This can be pod or service right now.
                      enum:
                      - Pod
                      - Service
                      - PersistentVolumeClaim
                      type: string
                  required:
                  - aggregation
                  - metricId
                  - query
                  - workloadType
                  type: object
                type: array
              resourceFilters:
                description: ResourceFilters provide filters that will be used to
                  find the workload objects. This is to find the exact resources the
                  query is interested in. At least one must be provided.
                items:
                  properties:
                    annotation:
                      description: Annotation uses the resource annotations to find
                        resources to monitor.
                      properties:
                        annotationSelector:
                          description: AnnotationSelector are used to filter to the
                            correct workload.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      type: object
                    label:
                      description: Label uses the resource annotations to find resources
                        to monitor.
                      properties:
                        labelSelector:
                          description: LabelSelector are used to filter to the correct
                            workload.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      type: object
                    namespace:
                      description: Namespace is the filter to control which namespaces
                        to look for your resources. Default is always Operator Group
                        (supported by OLM)
                      properties:
                        labelSelector:
                          description: LabelSelector are used to filter to the correct
                            workload.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        useOperatorGroup:
                          description: UseOperatorGroup use your operator group for
                            namespace filtering
                          type: boolean
                      required:
                      - useOperatorGroup
                      type: object
                    ownerCRD:
                      description: OwnerCRD uses the owning CRD to filter resources.
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    workloadType:
                      description: WorkloadType identifies the type of workload to
                        look for. This can be pod or service right now.
                      enum:
                      - Pod
                      - Service
                      - PersistentVolumeClaim
                      type: string
                  required:
                  - workloadType
                  type: object
                minItems: 1
                type: array
            required:
            - group
            - kind
            - meters
            - resourceFilters
            type: object
          status:
            description: MeterDefinitionStatus defines the observed state of MeterDefinition
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              results:
                description: Results is a list of Results that get returned from a
                  query to prometheus
                items:
                  description: Result is a result of a query defined on the meterdefinition.
                    This will generate data for the previous hour on whichever workload
                    you specify. This will allow you to check whether a query is working
                    as intended.
                  properties:
                    metricName:
                      description: MetricName is the identifier that you will use
                        to identify your query
                      type: string
                    query:
                      description: Query is the compiled query that is given to Prometheus
                      type: string
                    values:
                      description: Values are the results of the query
                      items:
                        description: ResultValues will hold the results of the prometheus
                          query
                        properties:
                          timestamp:
                            format: int64
                            type: integer
                          value:
                            type: string
                        required:
                        - timestamp
                        - value
                        type: object
                      type: array
                  type: object
                type: array
              workloadResource:
                description: WorkloadResources is the list of resources discovered
                  by this meter definition
                items:
                  description: WorkloadResource represents the resources associated
                    to a workload
                  properties:
                    groupVersionKind:
                      description: GroupVersionKind of the resource
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    name:
                      description: Name of the resource Required
                      type: string
                    namespace:
                      description: Namespace of the resource Required
                      type: string
                    referencedWorkloadName:
                      description: ReferencedWorkloadName is the name of the workload
                      type: string
                    uid:
                      description: Namespace of the resource
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: meterreports.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "JobRunning")].status
    name: RUNNING
    type: string
  - JSONPath: .status.conditions[?(@.type == "JobRunning")].reason
    name: REASON
    type: string
  - JSONPath: .status.metricUploadCount
    name: METRICS
    type: string
  group: marketplace.redhat.com
  names:
    kind: MeterReport
    listKind: MeterReportList
    plural: meterreports
    singular: meterreport
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeterReport is the Schema for the meterreports API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MeterReportSpec defines the desired state of MeterReport
          properties:
            endTime:
              description: EndTime of the job
              format: date-time
              type: string
            extraJobArgs:
              description: ExtraArgs is a set of arguments to pass to the job
              items:
                type: string
              type: array
            meterDefinitionReferences:
              description: MeterDefinitionReferences are used as the first meter definition
                source. Prometheus data is used to supplement.
              items:
                description: MeterDefinitionReference is a more friendly form to set
                  on the MeterReport providing the default meter definitions to use
                  for the day.
                properties:
                  name:
                    description: Name is the name of the MeterDefinition
                    type: string
                  namespace:
                    description: Namespace is the namespace of the MeterDefinition
                    type: string
                  resourceVersion:
                    description: ResourceVersion
                    type: string
                  spec:
                    description: Spec is a copy of the meter definition spec, this
                      can be left empty and later filled in by the report tool.
                    properties:
                      group:
                        description: Group defines the operator group of the meter
                        type: string
                      installedBy:
                        description: InstalledBy is a reference to the CSV that install
                          the meter definition. This is used to determine an operator
                          group.
                        properties:
                          groupVersionKind:
                            description: GroupVersionKind of the resource
                            properties:
                              apiVersion:
                                description: APIVersion of the CRD
                                type: string
                              kind:
                                description: Kind of the CRD
                                type: string
                            required:
                            - apiVersion
                            - kind
                            type: object
                          name:
                            description: Name of the resource Required
                            type: string
                          namespace:
                            description: Namespace of the resource Required
                            type: string
                          uid:
                            description: Namespace of the resource
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      kind:
                        description: Kind defines the primary CRD kind of the meter
                        type: string
                      meters:
                        description: Meters are the definitions related to the metrics
                          that you would like to monitor.
                        items:
                          properties:
                            aggregation:
                              description: Aggregation to use with the query
                              enum:
                              - sum
                              - min
                              - max
                              - avg
                              type: string
                            dateLabelOverride:
                              description: DateLabelOverride provides a means of overriding
                                the date returned for the metric using a label. This
                                is to handle cases where the metric is a constant
                                that is calculated.
                              type: string
                            description:
                              description: Description is the overview of what the
                                metric is providing for humans to read.
                              type: string
                            groupBy:
                              description: Group is the set of label fields returned
                                by query to aggregate on.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            label:
                              description: Label is the usage metrics key field on
                                the report. Defaults to the metricId field if not
                                provided
                              type: string
                            metricId:
                              description: Metric is the id of the meter
                              type: string
                            name:
                              description: Name of the metric for humans to read.
                              type: string
                            period:
                              description: Period is the amount of time to segment
                                the data into. Default is 1h.
                              type: string
                            query:
                              description: Query to use for prometheus to find the
                                metrics
                              type: string
                            unit:
                              description: Unit is the unit of the metrics. Defaults
                                to the metricId field if not provided
                              type: string
                            valueLabelOverride:
                              description: ValueLabelOverride provides a means of
                                overriding the value returned for the metric using
                                a label. This is to handle cases where the metric
                                is a constant that is calculated.
                              type: string
                            without:
                              description: Labels to filter out automatically.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            workloadType:
                              description: WorkloadType identifies the type of workload
                                to look for. This can be pod or service right now.
                              enum:
                              - Pod
                              - Service
                              - PersistentVolumeClaim
                              type: string
                          required:
                          - aggregation
                          - metricId
                          - query
                          - workloadType
                          type: object
                        type: array
                      resourceFilters:
                        description: ResourceFilters provide filters that will be
                          used to find the workload objects. This is to find the exact
                          resources the query is interested in. At least one must
                          be provided.
                        items:
                          properties:
                            annotation:
                              description: Annotation uses the resource annotations
                                to find resources to monitor.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector are used to filter
                                    to the correct workload.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              type: object
                            label:
                              description: Label uses the resource annotations to
                                find resources to monitor.
                              properties:
                                labelSelector:
                                  description: LabelSelector are used to filter to
                                    the correct workload.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              type: object
                            namespace:
                              description: Namespace is the filter to control which
                                namespaces to look for your resources. Default is
                                always Operator Group (supported by OLM)
                              properties:
                                labelSelector:
                                  description: LabelSelector are used to filter to
                                    the correct workload.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                useOperatorGroup:
                                  description: UseOperatorGroup use your operator
                                    group for namespace filtering
                                  type: boolean
                              required:
                              - useOperatorGroup
                              type: object
                            ownerCRD:
                              description: OwnerCRD uses the owning CRD to filter
                                resources.
                              properties:
                                apiVersion:
                                  description: APIVersion of the CRD
                                  type: string
                                kind:
                                  description: Kind of the CRD
                                  type: string
                              required:
                              - apiVersion
                              - kind
                              type: object
                            workloadType:
                              description: WorkloadType identifies the type of workload
                                to look for. This can be pod or service right now.
                              enum:
                              - Pod
                              - Service
                              - PersistentVolumeClaim
                              type: string
                          required:
                          - workloadType
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - group
                    - kind
                    - meters
                    - resourceFilters
                    type: object
                  uid:
                    description: UID is the UID of the MeterDefinition
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
              x-kubernetes-list-map-keys:
              - name
              - namespace
              x-kubernetes-list-type: map
            meterDefinitions:
              description: MeterDefinitions is the list of meterDefinitions included
                in the report DEPRECATED
              items:
                description: MeterDefinition defines the meter workloads used to enable
                  pay for use billing.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: MeterDefinitionSpec defines the desired metering
                      spec
                    properties:
                      installedBy:
                        description: InstalledBy is a reference to the CSV that install
                          the meter definition. This is used to determine an operator
                          group.
                        properties:
                          groupVersionKind:
                            description: GroupVersionKind of the resource
                            properties:
                              apiVersion:
                                description: APIVersion of the CRD
                                type: string
                              kind:
                                description: Kind of the CRD
                                type: string
                            required:
                            - apiVersion
                            - kind
                            type: object
                          name:
                            description: Name of the resource Required
                            type: string
                          namespace:
                            description: Namespace of the resource Required
                            type: string
                          uid:
                            description: Namespace of the resource
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      meterGroup:
                        description: Group defines the operator group of the meter
                        type: string
                      meterKind:
                        description: Kind defines the primary CRD kind of the meter
                        type: string
                      meterVersion:
                        description: Version defines the primary CRD version of the
                          meter. This field is no longer used.
                        type: string
                      podMeterLabels:
                        description: PodMeterLabels name of the prometheus metrics
                          you want to track. User workloads instead.
                        items:
                          type: string
                        type: array
                      serviceMeterLabels:
                        description: ServiceMeterLabels name of the meterics you want
                          to track. Use workloads instead.
                        items:
                          type: string
                        type: array
                      workloadVertexLabelSelectors:
                        description: VertexFilters are used when Namespace is selected.
                          Can be omitted if you select OperatorGroup
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      workloadVertexType:
                        description: WorkloadVertexType is the top most object of
                          a workload. It allows you to identify the upper bounds of
                          your workloads.
                        enum:
                        - Namespace
                        - OperatorGroup
                        type: string
                      workloads:
                        description: Workloads identify the workloads to meter.
                        items:
                          description: Workload helps identify what to target for
                            metering.
                          properties:
                            annotationSelector:
                              description: AnnotationSelector are used to filter to
                                the correct workload.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            labelSelector:
                              description: LabelSelector are used to filter to the
                                correct workload.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            metricLabels:
                              description: MetricLabels are the labels to collect
                              items:
                                description: MeterLabelQuery helps define a meter
                                  label to build and search for
                                properties:
                                  aggregation:
                                    description: Aggregation to use with the query
                                    enum:
                                    - sum
                                    - min
                                    - max
                                    - avg
                                    type: string
                                  label:
                                    description: Label is the name of the meter
                                    type: string
                                  query:
                                    description: Query to use for the label
                                    type: string
                                required:
                                - label
                                type: object
                              minItems: 1
                              type: array
                            name:
                              description: Name of the workload, must be unique in
                                a meter definition.
                              type: string
                            ownerCRD:
                              description: OwnerCRD is the name of the GVK to look
                                for as the owner of all the meterable assets. If omitted,
                                the labels and annotations are used instead.
                              properties:
                                apiVersion:
                                  description: APIVersion of the CRD
                                  type: string
                                kind:
                                  description: Kind of the CRD
                                  type: string
                              required:
                              - apiVersion
                              - kind
                              type: object
                            type:
                              description: WorkloadType identifies the type of workload
                                to look for. This can be pod or service right now.
                              enum:
                              - Pod
                              - Service
                              - PersistentVolumeClaim
                              type: string
                          required:
                          - name
                          - type
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - meterGroup
                    - meterKind
                    type: object
                  status:
                    description: MeterDefinitionStatus defines the observed state
                      of MeterDefinition
                    properties:
                      conditions:
                        description: Conditions represent the latest available observations
                          of an object's state
                        items:
                          description: "Condition represents an observation of an
                            object's state. Conditions are an extension mechanism
                            intended to be used when the details of an observation
                            are not a priori known or would not apply to all instances
                            of a given Kind. \n Conditions should be added to explicitly
                            convey properties that users and components care about
                            rather than requiring those properties to be inferred
                            from other observations. Once defined, the meaning of
                            a Condition can not be changed arbitrarily - it becomes
                            part of the API, and has the same backwards- and forwards-compatibility
                            concerns of any other part of the API."
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              description: ConditionReason is intended to be a one-word,
                                CamelCase representation of the category of cause
                                of the current status. It is intended to be used in
                                concise output, such as one-line kubectl get output,
                                and in summarizing occurrences of causes.
                              type: string
                            status:
                              type: string
                            type:
                              description: "ConditionType is the type of the condition
                                and is typically a CamelCased word or short phrase.
                                \n Condition types should indicate state in the \"abnormal-true\"
                                polarity. For example, if the condition indicates
                                when a policy is invalid, the \"is valid\" case is
                                probably the norm, so the condition should be called
                                \"Invalid\"."
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      results:
                        description: Results is a list of Results that get returned
                          from a query to prometheus
                        items:
                          description: Result is a result of a query defined on the
                            meterdefinition. This will generate data for the previous
                            hour on whichever workload you specify. This will allow
                            you to check whether a query is working as intended.
                          properties:
                            metricName:
                              description: MetricName is the identifier that you will
                                use to identify your query
                              type: string
                            query:
                              description: Query is the compiled query that is given
                                to Prometheus
                              type: string
                            values:
                              description: Values are the results of the query
                              items:
                                description: ResultValues will hold the results of
                                  the prometheus query
                                properties:
                                  timestamp:
                                    format: int64
                                    type: integer
                                  value:
                                    type: string
                                required:
                                - timestamp
                                - value
                                type: object
                              type: array
                          type: object
                        type: array
                      workloadResource:
                        description: WorkloadResources is the list of resoruces discovered
                          by this meter definition
                        items:
                          description: WorkloadResource represents the resources associated
                            to a workload
                          properties:
                            groupVersionKind:
                              description: GroupVersionKind of the resource
                              properties:
                                apiVersion:
                                  description: APIVersion of the CRD
                                  type: string
                                kind:
                                  description: Kind of the CRD
                                  type: string
                              required:
                              - apiVersion
                              - kind
                              type: object
                            name:
                              description: Name of the resource Required
                              type: string
                            namespace:
                              description: Namespace of the resource Required
                              type: string
                            referencedWorkloadName:
                              description: ReferencedWorkloadName is the name of the
                                workload
                              type: string
                            uid:
                              description: Namespace of the resource
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            prometheusService:
              description: PrometheusService is the definition for the service labels.
              properties:
                basicAuth:
                  description: BasicAuth allow an endpoint to authenticate over basic
                    authentication Optional
                  properties:
                    ca:
                      description: Struct containing the CA cert to use for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    caFile:
                      description: Path to the CA cert in the Prometheus container
                        to use for the targets.
                      type: string
                    cert:
                      description: Struct containing the client cert file for the
                        targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    certFile:
                      description: Path to the client cert file in the Prometheus
                        container for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: Path to the client key file in the Prometheus container
                        for the targets.
                      type: string
                    keySecret:
                      description: Secret containing the client key file for the targets.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
                bearerTokenFile:
                  description: File to read bearer token for scraping targets.
                  type: string
                bearerTokenSecret:
                  description: Secret to mount to read bearer token for scraping targets.
                    The secret needs to be in the same namespace as the service monitor
                    and accessible by the Prometheus Operator.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                name:
                  description: Name of the job Required
                  type: string
                namespace:
                  description: Namespace of the job Required
                  type: string
                targetPort:
                  anyOf:
                  - type: integer
                  - type: string
                  description: Port name is the name of the part to select Required
                  x-kubernetes-int-or-string: true
                tlsConfig:
                  description: TLS configuration to use when scraping the endpoint
                    Optional
                  properties:
                    ca:
                      description: Struct containing the CA cert to use for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    caFile:
                      description: Path to the CA cert in the Prometheus container
                        to use for the targets.
                      type: string
                    cert:
                      description: Struct containing the client cert file for the
                        targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    certFile:
                      description: Path to the client cert file in the Prometheus
                        container for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: Path to the client key file in the Prometheus container
                        for the targets.
                      type: string
                    keySecret:
                      description: Secret containing the client key file for the targets.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
              required:
              - name
              - namespace
              - targetPort
              type: object
            reportUUID:
              description: ReportUUID is the generated ID for the report.
              type: string
            startTime:
              description: StartTime of the job
              format: date-time
              type: string
          required:
          - endTime
          - prometheusService
          - startTime
          type: object
        status:
          description: MeterReportStatus defines the observed state of MeterReport
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's stateonfig
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            errors:
              description: QueryErrorList shows if there were any errors from queries
                for the report.
              items:
                description: ErrorDetails provides details about errors that happen
                  in the job
                properties:
                  details:
                    additionalProperties:
                      type: string
                    description: Details of the error
                    type: object
                  reason:
                    description: Reason the error occurred
                    type: string
                type: object
              type: array
            jobReference:
              description: A list of pointers to currently running jobs.
              properties:
                active:
                  description: The number of actively running pods.
                  format: int32
                  type: integer
                backoffLimit:
                  description: Specifies the number of retries before marking this
                    job failed. Defaults to 6
                  format: int32
                  type: integer
                completionTime:
                  description: Represents time when the job was completed. It is not
                    guaranteed to be set in happens-before order across separate operations.
                    It is represented in RFC3339 form and is in UTC.
                  format: date-time
                  type: string
                failed:
                  description: The number of pods which reached phase Failed.
                  format: int32
                  type: integer
                jobFailed:
                  description: JobFailed is the boolean value set if the job failed
                  type: boolean
                jobSuccess:
                  description: JobSuccess is the boolean value set if the job succeeded
                  type: boolean
                name:
                  description: Name of the job Required
                  type: string
                namespace:
                  description: Namespace of the job Required
                  type: string
                startTime:
                  description: Represents time when the job was acknowledged by the
                    job controller. It is not guaranteed to be set in happens-before
                    order across separate operations. It is represented in RFC3339
                    form and is in UTC.
                  format: date-time
                  type: string
                succeeded:
                  description: The number of pods which reached phase Succeeded.
                  format: int32
                  type: integer
              required:
              - name
              - namespace
              type: object
            metricUploadCount:
              description: MetricUploadCount is the number of metrics in the report
              type: integer
            uploadUID:
              description: UploadID is the ID associated with the upload
              type: string
            warnings:
              description: Warnings from the job
              items:
                description: ErrorDetails provides details about errors that happen
                  in the job
                properties:
                  details:
                    additionalProperties:
                      type: string
                    description: Details of the error
                    type: object
                  reason:
                    description: Reason the error occurred
                    type: string
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: razeedeployments.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.installConditions[?(@.type == "Installing")].status
    name: INSTALLING
    type: string
  - JSONPath: .status.installConditions[?(@.type == "Installing")].reason
    name: STEP
    type: string
  - JSONPath: .status.nodesFromRazeeDeploymentsCount
    name: APPS
    type: integer
  group: marketplace.redhat.com
  names:
    kind: RazeeDeployment
    listKind: RazeeDeploymentList
    plural: razeedeployments
    singular: razeedeployment
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RazeeDeployment is the resources that deploys Razee for the Red
        Hat Marketplace. This is an internal resource not meant to be modified directly.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RazeeDeploymentSpec defines the desired state of RazeeDeployment
          properties:
            childUrl:
              description: Location of your IBM Cloud Object Storage resources Used
                internally by the Operator
              type: string
            clusterDisplayName:
              description: The ClusterDisplayName is a unique name of for a cluster
                specified by the admin during registration
              type: string
            clusterUUID:
              description: ClusterUUID is the cluster identifier, used for installing
                razee.
              type: string
            deployConfig:
              description: Configuration values provided from redhat marketplace These
                are used internally by the Operator
              properties:
                bucketName:
                  description: BucketName is the name of the bucket in Cloud Object
                    Storage and correlates to your accountID
                  type: string
                childRRS3FileName:
                  description: The file name of the child RemoteResourecS3
                  type: string
                fileSourceUrl:
                  description: 'FileSourceURL DEPRECATED: The url of the filesource
                    arg that gets passed into the razeedeploy-job'
                  type: string
                ibmCosReaderKey:
                  description: Api key used to access the bucket IBM COS
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                ibmCosUrl:
                  description: Base url for the instance of IBM COS
                  type: string
                razeeDashOrgKey:
                  description: Key used to identify a particular razee instance
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                razeeDashUrl:
                  description: Url used by the razee install to post data
                  type: string
              type: object
            deploySecretName:
              description: DeploySecretName is the name of our secret where Razee
                variables are stored.
              type: string
            enabled:
              description: Enabled is the flag that controls if the controller does
                work. Setting enabled to true will create a Razee namespace and deploy
                it's componenets. Set to false to bypass Razee installation
              type: boolean
            features:
              description: The features that can be enabled or disabled
              properties:
                deployment:
                  description: Deployment represents the enablement of the razee deployment,
                    defaults to true when not set
                  type: boolean
                registration:
                  description: Registration represents the enablement of the registration
                    watchkeeper deployment, defaults to true when not set
                  type: boolean
              type: object
            legacyUninstallHasRun:
              description: Flag used by the RazeeDeployment Controller to decide whether
                to run legacy uninstall job Used internally by the Operator
              type: boolean
            targetNamespace:
              description: TargetNamespace is configurable target of the razee namespace
                This is to support legancy installs. Please do not edit.
              type: string
          required:
          - clusterUUID
          - enabled
          type: object
        status:
          description: RazeeDeploymentStatus defines the observed state of RazeeDeployment
          properties:
            conditions:
              description: 'JobConditions DEPRECATED: represent the latest available
                observations of an object''s stateonfig'
              properties:
                lastProbeTime:
                  description: Last time the condition was checked.
                  format: date-time
                  type: string
                lastTransitionTime:
                  description: Last time the condition transit from one status to
                    another.
                  format: date-time
                  type: string
                message:
                  description: Human readable message indicating details about last
                    transition.
                  type: string
                reason:
                  description: (brief) reason for the condition's last transition.
                  type: string
                status:
                  description: Status of the condition, one of True, False, Unknown.
                  type: string
                type:
                  description: Type of job condition, Complete or Failed.
                  type: string
              required:
              - status
              - type
              type: object
            installConditions:
              description: RazeeConditions represent the latest available observations
                of an object's stateonfig
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            jobState:
              description: 'JobState DEPRECATED: is the status of the Razee Install
                Job'
              properties:
                active:
                  description: The number of actively running pods.
                  format: int32
                  type: integer
                completionTime:
                  description: Represents time when the job was completed. It is not
                    guaranteed to be set in happens-before order across separate operations.
                    It is represented in RFC3339 form and is in UTC.
                  format: date-time
                  type: string
                conditions:
                  description: 'The latest available observations of an object''s
                    current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                  items:
                    description: JobCondition describes current state of a job.
                    properties:
                      lastProbeTime:
                        description: Last time the condition was checked.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: Last time the condition transit from one status
                          to another.
                        format: date-time
                        type: string
                      message:
                        description: Human readable message indicating details about
                          last transition.
                        type: string
                      reason:
                        description: (brief) reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of job condition, Complete or Failed.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failed:
                  description: The number of pods which reached phase Failed.
                  format: int32
                  type: integer
                startTime:
                  description: Represents time when the job was acknowledged by the
                    job controller. It is not guaranteed to be set in happens-before
                    order across separate operations. It is represented in RFC3339
                    form and is in UTC.
                  format: date-time
                  type: string
                succeeded:
                  description: The number of pods which reached phase Succeeded.
                  format: int32
                  type: integer
              type: object
            localSecretVarsPopulated:
              description: 'LocalSecretVarsPopulated DEPRECATED: informs if the correct
                local variables are correct set.'
              type: boolean
            missingValuesFromSecret:
              description: MissingValuesFromSecret validates the secret provided has
                all the correct fields
              items:
                type: string
              type: array
            nodesFromRazeeDeployments:
              description: NodesFromRazeeDeployments contains the pods names created
                by the rhm-watch-keeper and rhm-remote-resources3-controller deployments
              items:
                type: string
              type: array
            nodesFromRazeeDeploymentsCount:
              description: NodesFromRazeeDeploymentsCount contains the pods names
                created by the rhm-watch-keeper and rhm-remote-resources3-controller
                deployments
              type: integer
            razee_job_install:
              description: RazeeJobInstall contains information regarding the install
                job so it can be removed
              properties:
                razee_install_url:
                  description: RazeeInstallURL is the url used to install the Razee
                    resources
                  type: string
                razee_namespace:
                  description: RazeeNamespace is the namespace targeted for the Razee
                    install
                  type: string
              required:
              - razee_install_url
              - razee_namespace
              type: object
            razeePrerequisitesCreated:
              description: RazeePrerequestesCreated is the list of configmaps and
                secrets required to be installed
              items:
                type: string
              type: array
            redHatMarketplaceSecretFound:
              description: 'RedHatMarketplaceSecretFound DEPRECATED: is the status
                of finding the secret in the cluster'
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: remoteresources3s.marketplace.redhat.com
spec:
  group: marketplace.redhat.com
  names:
    kind: RemoteResourceS3
    listKind: RemoteResourceS3List
    plural: remoteresources3s
    singular: remoteresources3
  preserveUnknownFields: true
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RemoteResourceS3 is the Schema for the remoteresources3s API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RemoteResourceS3Spec defines the desired state of RemoteResourceS3
          properties:
            auth:
              description: Auth provides options to authenticate to a remote location
              properties:
                hmac:
                  description: Hmac is the credentials to access the storage location.
                  properties:
                    accessKeyId:
                      description: AccessKeyID is a unique identifier for an AWS account
                        and is used by AWS to look up your Secret Access Key
                      type: string
                    accessKeyIdRef:
                      description: AccessKeyIDRef holds reference information to an
                        AccessKeyID stored in a secret on your cluster
                      properties:
                        valueFrom:
                          description: ValueFrom is the pointer to the secret key
                            ref
                          properties:
                            secretKeyRef:
                              description: SecretKeyRef is the pointer to the secret
                                key ref
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    secretAccessKey:
                      description: SecretAccessKey is used by AWS to calculate a request
                        signature. Your SecretAccessKey is a shared secret known only
                        to you and AWS
                      type: string
                    secretAccessKeyRef:
                      description: SecretAccessKeyRef holds reference information
                        to an SecretAccessKey stored in a secret on your cluster
                      properties:
                        valueFrom:
                          description: ValueFrom is the pointer to the secret key
                            ref
                          properties:
                            secretKeyRef:
                              description: SecretKeyRef is the pointer to the secret
                                key ref
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                  type: object
                iam:
                  description: Iam is the credentials for Iam auth.
                  properties:
                    apiKey:
                      description: APIKey is the API Key used to authenticate to your
                        IBM Cloud Object Storage instance
                      type: string
                    apiKeyRef:
                      description: APIKeyRef holds reference information used to locate
                        a secret which contains your IBM COS api key
                      properties:
                        valueFrom:
                          description: ValueFrom is the pointer to the secret key
                            ref
                          properties:
                            secretKeyRef:
                              description: SecretKeyRef is the pointer to the secret
                                key ref
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    grantType:
                      description: GrantType determines what authentication flow will
                        be used to generate an access token. GrantType for IAM will
                        usually be " "urn:ibm:params:oauth:grant-type:apikey""
                      type: string
                    responseType:
                      description: ResponseType specifies which grant type your application
                        is requesting. ResponseType for IAM will usually be "cloud_iam"
                      type: string
                    url:
                      description: URL is the auth endpoint. URL for IAM will usually
                        be "https://iam.cloud.ibm.com/identity/token"
                      type: string
                  type: object
              type: object
            requests:
              description: Requests array contains information regarding the location
                of your remote resource
              items:
                description: Request holds requests that populate the Requests array
                properties:
                  message:
                    description: Message of the request
                    type: string
                  optional:
                    description: Optional if downloading or applying a child resource
                      fails, RemoteResource will stop execution and report error to
                      .status. You can allow execution to continue by marking a reference
                      as optional.
                    type: boolean
                  options:
                    description: Options is the configurable options for the request
                    properties:
                      headers:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          description: Header allows you to provide additional information
                            with your request
                          type: object
                        description: Headers of the request
                        type: object
                      uri:
                        description: URI of the request
                        type: string
                      url:
                        description: URL of the request
                        type: string
                    type: object
                  statusCode:
                    description: Status of the request
                    type: integer
                type: object
              type: array
          type: object
        status:
          description: RemoteResourceS3Status defines the observed state of RemoteResourceS3
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            razee-logs:
              description: RazeeLogs is the logs from the controller
              properties:
                error:
                  additionalProperties:
                    type: string
                  description: Log is a line of log from the controller
                  type: object
              type: object
            touched:
              description: Touched is if the status has been touched
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metric-state
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-remoteresources3deployment
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-watch-keeper
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-leader-election-role
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-manager-role
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resources:
  - configmap
  - secret
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secret
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - redhat-marketplace-pull-secret
  resources:
  - secret
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - service
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - patch
  - update
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplaceconfigs
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplaceconfigs
  - marketplaceconfigs/finalizers
  - marketplaceconfigs/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterbases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterbases
  - meterbases/finalizers
  - meterbases/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterreports
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterreports
  - meterreports/finalizers
  - meterreports/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - razeedeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - razeedeployments
  - razeedeployments/finalizers
  - razeedeployments/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - remoteresources3s
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - remoteresources3s
  - remoteresources3s/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - create
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metric-state
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-operator
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-remoteresources3deployment
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-reporter
  namespace: openshift-redhat-marketplace
rules:
- apiGroups:
  - ""
  resourceNames:
  - pull-secret
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-manager-role
rules:
- nonResourceURLs:
  - /api/v1/query
  - /api/v1/query_range
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secret
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - razeedeploy-sa
  - watch-keeper-sa
  resources:
  - serviceaccounts
  verbs:
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - meterdefinitions.marketplace.redhat.com
  resources:
  - customresourcedefinitions
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resourceNames:
  - clustersubscription
  - featureflagsetld-controller
  - managedset-controller
  - mustachetemplate-controller
  - remoteresource-controller
  - remoteresources3-controller
  - remoteresources3decrypt-controller
  - watch-keeper
  resources:
  - deployments
  verbs:
  - delete
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  - extensions
  resourceNames:
  - razeedeploy-job
  resources:
  - jobs
  verbs:
  - delete
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  - consoles
  - infrastructures
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - deploy.razee.io
  resources:
  - '*'
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplaceconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplaceconfigs
  - marketplaceconfigs/finalizers
  - marketplaceconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterbases
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterbases
  - meterbases/finalizers
  - meterbases/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions
  - meterdefinitions/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions/status
  verbs:
  - get
  - list
  - patch
  - update
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterreports
  verbs:
  - get
  - list
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterreports
  - meterreports/finalizers
  - meterreports/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - razeedeployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - remoteresources3s
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  - servicemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resourceNames:
  - ibm-operator-catalog
  - opencloud-operators
  resources:
  - catalogsources
  verbs:
  - create
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - catalogsources
  - operatorsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  verbs:
  - create
  - delete
  - patch
  - update
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - subscriptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - operatorgroups
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resourceNames:
  - redhat-marketplace
  resources:
  - operatorsources
  verbs:
  - create
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resourceNames:
  - razeedeploy-admin-cr
  - redhat-marketplace-razeedeploy
  resources:
  - clusterroles
  verbs:
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-meterdefinition-editor-role
rules:
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-meterdefinition-viewer-role
rules:
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metric-state
rules:
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterreports
  verbs:
  - get
  - list
  - update
- apiGroups:
  - marketplace.redhat.com
  resources:
  - meterdefinitions
  - meterdefinitions/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes/metrics
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-operator
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - alertmanagers.monitoring.coreos.com
  - podmonitors.monitoring.coreos.com
  - prometheuses.monitoring.coreos.com
  - prometheusrules.monitoring.coreos.com
  - servicemonitors.monitoring.coreos.com
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - prometheuses
  - prometheuses/finalizers
  - alertmanagers/finalizers
  - servicemonitors
  - podmonitors
  - prometheusrules
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  - endpoints
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-remoteresources3deployment
rules:
- apiGroups:
  - operators.coreos.com
  - marketplace.redhat.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-watch-keeper
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-leader-election-rolebinding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-leader-election-role
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-manager-rolebinding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-manager-role
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metric-state-binding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-metric-state
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-metric-state
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-binding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-prometheus
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-prometheus
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-operator-binding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-prometheus-operator
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-prometheus-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-remoteresources3deployment-binding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-remoteresources3deployment
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-remoteresources3deployment
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-reporter-binding
  namespace: openshift-redhat-marketplace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redhat-marketplace-reporter
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-metric-state-binding
  namespace: openshift-config
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-metric-state
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-metric-state
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-mteric-state-mdef-editor-binding
  namespace: openshift-config
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-meterdefinition-editor-role
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-metric-state
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-manager-role
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-prometheus
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-prometheus
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-prometheus-operator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-prometheus-operator
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-prometheus-operator
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-remoteresources3deployment-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-remoteresources3deployment
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-remoteresources3deployment
  namespace: openshift-redhat-marketplace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-watch-keeper-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redhat-marketplace-watch-keeper
subjects:
- kind: ServiceAccount
  name: redhat-marketplace-watch-keeper
  namespace: openshift-redhat-marketplace
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-controller-manager-metrics-service
  namespace: openshift-redhat-marketplace
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: redhat-marketplace-controller-manager-service
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-controller-manager-service
  namespace: openshift-redhat-marketplace
spec:
  ports:
  - port: 9443
    targetPort: 9443
  selector:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    authcheckImage: quay.io/mxpaspa/redhat-marketplace-authcheck:2.1.0
    metricStateImage: quay.io/mxpaspa/redhat-marketplace-metric-state:2.1.0
    reporterImage: quay.io/mxpaspa/redhat-marketplace-reporter:2.1.0
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-controller-manager
  namespace: openshift-redhat-marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      redhat.marketplace.com/name: redhat-marketplace-operator
  template:
    metadata:
      labels:
        control-plane: controller-manager
        redhat.marketplace.com/name: redhat-marketplace-operator
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        env:
        - name: RELATED_IMAGE_RHM_RRS3_DEPLOYMENT
          value: quay.io/razee/remoteresources3:0.9.0
        - name: RELATED_IMAGE_RHM_WATCH_KEEPER_DEPLOYMENT
          value: quay.io/razee/watch-keeper:0.7.5
        - name: RELATED_IMAGE_PROMETHEUS
          value: registry.redhat.io/openshift4/ose-prometheus:v4.6
        - name: RELATED_IMAGE_OAUTH_PROXY
          value: registry.redhat.io/openshift4/ose-oauth-proxy:v4.5
        - name: RELATED_IMAGE_PROMETHEUS_OPERATOR
          value: registry.redhat.io/openshift4/ose-prometheus-operator:v4.5
        - name: RELATED_IMAGE_CONFIGMAP_RELOADER
          value: registry.redhat.io/openshift4/ose-configmap-reloader:v4.5
        - name: RELATED_IMAGE_PROMETHEUS_CONFIGMAP_RELOADER
          value: registry.redhat.io/openshift4/ose-prometheus-config-reloader:v4.5
        - name: RELATED_IMAGE_KUBE_RBAC_PROXY
          value: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.5
        - name: IBMCATALOGSOURCE
          value: "true"
        - name: OS_IMAGE_KUBE_RBAC_PROXY
          value: quay.io/coreos/kube-rbac-proxy:v0.5.0
        - name: OS_IMAGE_PROMETHEUS
          value: quay.io/prometheus/prometheus:v2.24.0
        - name: OS_IMAGE_PROMETHEUS_OPERATOR
          value: quay.io/coreos/prometheus-operator:v0.42.1
        - name: OS_IMAGE_CONFIGMAP_RELOADER
          value: quay.io/coreos/configmap-reload:v0.0.1
        - name: OS_IMAGE_PROMETHEUS_CONFIGMAP_RELOADER
          value: quay.io/coreos/prometheus-config-reloader:v0.42.1
        - name: OS_IMAGE_OAUTH_PROXY
          value: quay.io/oauth2-proxy/oauth2-proxy:v6.1.1
        - name: OPERATOR_NAME
          value: redhat-marketplace-operator
        - name: RELATED_IMAGE_REPORTER
          value: quay.io/mxpaspa/redhat-marketplace-reporter:2.1.0
        - name: RELATED_IMAGE_METRIC_STATE
          value: quay.io/mxpaspa/redhat-marketplace-metric-state:2.1.0
        - name: RELATED_IMAGE_AUTHCHECK
          value: quay.io/mxpaspa/redhat-marketplace-authcheck:2.1.0
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OLM_OWNER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['olm.owner']
        - name: OLM_OWNER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['olm.owner.namespace']
        - name: OLM_OWNER_KIND
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['olm.owner.kind']
        - name: OPERATOR_GROUP
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.operatorGroup']
        image: quay.io/mxpaspa/redhat-marketplace-operator:2.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.5
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      serviceAccountName: redhat-marketplace-operator
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: redhat-marketplace-controller-manager-service
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-controller-manager-metrics-monitor
  namespace: openshift-redhat-marketplace
spec:
  endpoints:
  - path: /metrics
    port: https
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: redhat-marketplace-controller-manager-service
      namespace: openshift-redhat-marketplace
      path: /mutate-marketplace-redhat-com-v1beta1-meterdefinition
      port: 9443
  failurePolicy: Fail
  name: mmeterdefinition.marketplace.redhat.com
  rules:
  - apiGroups:
    - marketplace.redhat.com
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meterdefinitions
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: redhat-marketplace-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: redhat-marketplace-controller-manager-service
      namespace: openshift-redhat-marketplace
      path: /validate-marketplace-redhat-com-v1beta1-meterdefinition
      port: 9443
  failurePolicy: Fail
  name: vmeterdefinition.marketplace.redhat.com
  rules:
  - apiGroups:
    - marketplace.redhat.com
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meterdefinitions
  sideEffects: None
