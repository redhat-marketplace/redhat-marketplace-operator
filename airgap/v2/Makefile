include ../../utils.Makefile

IMAGE_REGISTRY ?= public-image-registry.apps-crc.testing/symposium
IMAGE_NAME = redhat-marketplace-data-service
IMAGE_TAG ?= $(TAG)
QUAY_EXPIRATION?=never

IMG ?= $(IMAGE_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG)
export IMG
IMAGE ?= $(IMG)
export IMAGE

all: svu generate vet fmt

IMAGE_PUSH ?= true
BUILDX ?= true
ARCH ?= amd64

ifeq ($(BUILDX),true)
DOCKERCMD=podman buildx
ifeq ($(IMAGE_PUSH),true)
ARGS="--push"
else
ARGS="--load"
endif
else
DOCKERCMD=podman
endif

# Build the docker image
docker-build:
	$(call docker-templated-build,$(IMAGE),DataService,./airgap/v2/,"-tags libsqlite3 ./cmd/server/main.go",redhat-marketplace-data-service,../..)

# Push the docker image
docker-push:
	docker push ${IMG}


docker-manifest:
	docker manifest create $(IMAGE) $(addprefix $(IMAGE)-,$(ARCHS))
	docker manifest push $(IMAGE)

# Run go fmt against code
fmt:
	go fmt ./...

# Run go vet against code
vet:
	go vet ./...

.PHONY: test
test: fmt vet ginkgo
	$(GINKGO) -r -coverprofile=cover-unit.out --randomize-all --randomize-suites --cover --race --show-node-events --trace ./...

buff-update:
	$(BUF) mod update
	$(BUF) mod update ./apis

# Generate
generate: buf buff-update
	$(BUF) generate
	go generate ./...

SRC_DIR=$(shell pwd)
DST_DIR=$(SRC_DIR)
UNAME := $(shell echo `uname` | tr '[:upper:]' '[:lower:]')

ARCH ?= amd64

build:
	$(call multiarch-build,redhat-marketplace-data-service, -tags libsqlite3 ./cmd/server/main.go)

demo: build
	docker-compose up

# skaffold helper for ibm-metrics-operator
.PHONY: kustomize-set-operator
kustomize-set-operator:
	cd ../../v2/config/manager && \
	$(KUSTOMIZE) edit set annotation \
	dqLiteImage:$(IMAGE_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG)

# export TWISTLOCK_URL and TWISTLOCK_CREDENTIALS in local environment
# TWISTLOCK_CREDENTIALS is w3id:w3password or w3id:apiKey
# apiKey can be generated by (tt api-key show)
security-scan: install-twistlock-tool
	$(IBM_TWISTLOCK_TOOL) images local-scan \
	--url $(TWISTLOCK_URL) \
	--user $(TWISTLOCK_CREDENTIALS) \
	--control-group eal_eal-006818 \
	${IMAGE}