name: Create Manifest

on:
  push:
    branches:
      - 'release/**'
      - 'hotfix/**'
      - '!release/*/channel/*'
      - '!hotfix/*/channel/*'
env:
  pushImage: true

jobs:
  create-bundle:
    name: Create Bundle
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        channel: ['beta', 'stable']
        include:
          - channel: 'beta'
            tags: ['no-merge']
            draft: 'true'
            message: 'Beta releases should not be merged. Only for deployment.'
          - channel: 'stable'
            tags: ['release']
            draft: 'false'
            message: 'Stable release should be merged.'
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get Vars
        id: vars
        run: |
          echo "::set-output name=version::$(make current-version)"
          echo "::set-output name=tag::sha-$(git rev-parse --short HEAD)"
          echo "::set-output name=hash::hash-${FILEHASH:0:6}"
        env:
          FILEHASH: ${{ hashFiles('build/**', 'assets/**', 'cmd/**', 'pkg/**', 'version/**', 'go.sum', 'go.mod') }}

      - name: Install operator-sdk
        run: |
          cd /tmp
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          python -m pip install --upgrade pip
          pip3 install operator-courier
          echo "::add-path::/usr/local/bin"
        env:
          RELEASE_VERSION: v0.17.0
      - name: Create CSV
        id: bundle
        run: make generate-csv bundle
        env:
          CSV_CHANNEL: ${{ matrix.channel }}
          CSV_DEFAULT_CHANNEL: ${{ matrix.channel == 'stable' }}
          OPERATOR_IMAGE: quay.io/rh-marketplace/redhat-marketplace-operator:${{ steps.vars.outputs.hash }}

      - name: Create branch
        run: |
          git config user.name 'Release Bot'
          git config user.email 'rhmoper@us.ibm.com'
          git add ./deploy
          git commit -m "chore: update csv"
          git checkout -b ${{ github.ref }}/channel/${{ matrix.channel }}
          git push -f -u origin ${{ github.ref }}/channel/${{ matrix.channel }}

      - name: Create PR if not created
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/pulls \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Release ${{ needs.build.outputs.version }} for channel ${{ matrix.channel }}",
            "draft": "{{ matrix.draft }}",
            "base" : "master",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.\n\nUse this to merge the release.\n\n{{ matrix.message }}"
            }'
