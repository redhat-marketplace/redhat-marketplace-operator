name: Create Manifest

on:
  push:
    branches:
      - 'release/**'
      - 'hotfix/**'
    paths-ignore:
      - 'deploy/olm-catalog/redhat-marketplace-operator/**'
env:
  pushImage: true

jobs:
  create-bundle:
    name: Create Bundle
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: ['stable']
        include:
          - channel: 'stable'
            tags: ['release']
            draft: 'false'
            message: 'Stable release should be merged.'
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.pullRequestSecret }}

      - name: Get Vars
        id: vars
        run: |
          echo ::set-env name=pr_branch::$(echo $BRANCH | sed 's/refs\/heads\///')
          echo "::set-output name=version::$(make current-version)"
          echo "::set-output name=tag::sha-$(git rev-parse --short HEAD)"
          echo "::set-output name=hash::$(make current-version)-${FILEHASH:0:6}"
          echo "::set-env name=OPERATOR_IMAGE::quay.io/rh-marketplace/redhat-marketplace-operator:$(make current-version)-${FILEHASH:0:6}"
        env:
          FILEHASH: ${{ hashFiles('build/**', 'assets/**', 'cmd/**', 'pkg/**', 'version/**', 'go.sum', 'go.mod') }}
          BRANCH: ${{ github.ref }}

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install operator-sdk
        run: |
          cd /tmp
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          python -m pip install --upgrade pip
          pip3 install operator-courier
          echo "::add-path::/usr/local/bin"
        env:
          RELEASE_VERSION: v0.18.0

      - name: Create CSV
        id: bundle
        run: make generate-csv bundle
        env:
          CSV_CHANNEL: ${{ matrix.channel }}
          CSV_DEFAULT_CHANNEL: ${{ matrix.channel == 'stable' }}

      - name: Create branch
        if: ${{ matrix.channel == 'stable' && github.event_name == 'push' }}
        run: |
          git config user.name 'RHM Oper Bot'
          git config user.email 'rhmoper@us.ibm.com'
          git add ./deploy/olm-catalog
          git commit -m "chore: update csv"
          git push

      - name: Open a PR to the default branch
        uses: vsoch/pull-request-action@1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.pullRequestSecret }}
          PULL_REQUEST_FROM_BRANCH: '${{ env.pr_branch }}'
          PULL_REQUEST_BRANCH: master
          PULL_REQUEST_TITLE: 'Release ${{ steps.vars.outputs.version }}'
          PULL_REQUEST_BODY: "Release PR - merge when ready.\n\nSteps:\n1. Release the beta channel bundle from the PR 'Generate Bundle' check.\n1. Test beta. Make changes to release branch as necessary.\n1. Release the stable channel.\n1. Merge this PR."
